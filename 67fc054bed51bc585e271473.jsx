/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/67fc054bed51bc585e271473.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
  const { scene } = useGLTF('/67fc054bed51bc585e271473.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  return (
    <group {...props} dispose={null}>
      <primitive object={nodes.Hips} />
      <skinnedMesh geometry={nodes.beard.geometry} material={materials.beard} skeleton={nodes.beard.skeleton} />
      <skinnedMesh geometry={nodes.body.geometry} material={materials.body} skeleton={nodes.body.skeleton} />
      <skinnedMesh geometry={nodes.bottom.geometry} material={materials.bottom} skeleton={nodes.bottom.skeleton} />
      <skinnedMesh geometry={nodes.eye_left.geometry} material={materials.eye} skeleton={nodes.eye_left.skeleton} />
      <skinnedMesh geometry={nodes.eye_right.geometry} material={materials.eye} skeleton={nodes.eye_right.skeleton} />
      <skinnedMesh geometry={nodes.footwear.geometry} material={materials.footwear} skeleton={nodes.footwear.skeleton} />
      <skinnedMesh geometry={nodes.glasses.geometry} material={materials.glasses} skeleton={nodes.glasses.skeleton} />
      <skinnedMesh geometry={nodes.hair.geometry} material={materials.hair} skeleton={nodes.hair.skeleton} />
      <skinnedMesh geometry={nodes.head.geometry} material={materials.head} skeleton={nodes.head.skeleton} />
      <skinnedMesh geometry={nodes.teeth.geometry} material={materials.teeth} skeleton={nodes.teeth.skeleton} />
      <skinnedMesh geometry={nodes.tongue.geometry} material={materials.teeth} skeleton={nodes.tongue.skeleton} />
      <skinnedMesh geometry={nodes.top.geometry} material={materials.top} skeleton={nodes.top.skeleton} />
    </group>
  )
}

useGLTF.preload('/67fc054bed51bc585e271473.glb')
